@charset "UTF-8";
/******************************************************************
Mixins
******************************************************************/
/*********************
CSS3 GRADIENTS
*********************/

/* @include css-gradient(#dfdfdf,#f8f8f8); */
@mixin css-gradient($from: #dfdfdf, $to: #f8f8f8) {
    background-color: $to;
    background-image: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
    background-image: linear-gradient(to bottom, $from, $to);
}

/**********************
SVG Arrows
**********************/

// Takes in the HEX color without the "#" character
@mixin arrow-up( $color ) {
    background-image: url("data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22utf-8%22%3F%3E%0D%0A%3C%21--%20Generator%3A%20Adobe%20Illustrator%2019.0.1%2C%20SVG%20Export%20Plug-In%20.%20SVG%20Version%3A%206.00%20Build%200%29%20%20--%3E%0D%0A%3Csvg%20version%3D%221.1%22%20id%3D%22%D0%A1%D0%BB%D0%BE%D0%B9_1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20x%3D%220px%22%20y%3D%220px%22%0D%0A%09%20viewBox%3D%22-77%2010%2020%2011%22%20enable-background%3D%22new%20-77%2010%2020%2011%22%20xml%3Aspace%3D%22preserve%22%3E%0D%0A%3Cpath%20id%3D%22Expand_Less%22%20fill%3D%22%23" +
        $color +
        "%22%20d%3D%22M-66.3%2C10.3c-0.4-0.4-1-0.4-1.4%2C0l-9%2C9c-0.4%2C0.4-0.4%2C1%2C0%2C1.4c0.4%2C0.4%2C1%2C0.4%2C1.4%2C0l8.3-8.3%0D%0A%09l8.3%2C8.3c0.4%2C0.4%2C1%2C0.4%2C1.4%2C0c0.4-0.4%2C0.4-1%2C0-1.4L-66.3%2C10.3z%22%2F%3E%0D%0A%3C%2Fsvg%3E%0D%0A");
}

// Takes in the HEX color without the "#" character
@mixin arrow-down( $color ) {
    background-image: url("data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22utf-8%22%3F%3E%0D%0A%3C%21--%20Generator%3A%20Adobe%20Illustrator%2019.0.1%2C%20SVG%20Export%20Plug-In%20.%20SVG%20Version%3A%206.00%20Build%200%29%20%20--%3E%0D%0A%3Csvg%20version%3D%221.1%22%20id%3D%22%D0%A1%D0%BB%D0%BE%D0%B9_1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20x%3D%220px%22%20y%3D%220px%22%0D%0A%09%20viewBox%3D%22-77%2010%2020%2011%22%20enable-background%3D%22new%20-77%2010%2020%2011%22%20xml%3Aspace%3D%22preserve%22%3E%0D%0A%3Cpath%20id%3D%22Expand_More%22%20fill%3D%22%23" +
        $color +
        "%22%20d%3D%22M-58.7%2C10.3l-8.3%2C8.3l-8.3-8.3c-0.4-0.4-1-0.4-1.4%2C0c-0.4%2C0.4-0.4%2C1%2C0%2C1.4l9%2C9l0%2C0l0%2C0%0D%0A%09c0.4%2C0.4%2C1%2C0.4%2C1.4%2C0l9-9c0.4-0.4%2C0.4-1%2C0-1.4C-57.7%2C9.9-58.3%2C9.9-58.7%2C10.3z%22%2F%3E%0D%0A%3C%2Fsvg%3E%0D%0A");
}

// Mobile-first media query helper
@mixin media($bp) {
    @media screen and (min-width: #{$bp}) {
        @content;
    }
}

/// Checks if a list does not contains a value.
///
/// @access private
///
/// @param {List} $list
///   The list to check against.
///
/// @return {Bool}

@function contains-falsy($list) {
    @each $item in $list {
        @if not $item {
            @return true;
        }
    }

    @return false;
}

/// Directional-property mixins are shorthands for writing properties like the following
///
/// @ignore You can also use `false` instead of `null`.
///
/// @param {List} $vals
///   List of directional values
///
/// @example scss - Usage
///   .element {
///     @include border-style(dotted null);
///     @include margin(null 0 10px);
///   }
///
/// @example css - CSS Output
///   .element {
///     border-bottom-style: dotted;
///     border-top-style: dotted;
///     margin-bottom: 10px;
///     margin-left: 0;
///     margin-right: 0;
///   }
///
/// @require {function} contains-falsy
///
/// @return {List}

@function collapse-directionals($vals) {
    $output: null;

    $a: nth($vals, 1);
    $b: if(length($vals) < 2, $a, nth($vals, 2));
    $c: if(length($vals) < 3, $a, nth($vals, 3));
    $d: if(length($vals) < 2, $a, nth($vals, if(length($vals) < 4, 2, 4)));

    @if $a == 0 {
        $a: 0;
    }
    @if $b == 0 {
        $b: 0;
    }
    @if $c == 0 {
        $c: 0;
    }
    @if $d == 0 {
        $d: 0;
    }

    @if $a == $b and $a == $c and $a == $d {
        $output: $a;
    } @else if $a == $c and $b == $d {
        $output: $a $b;
    } @else if $b == $d {
        $output: $a $b $c;
    } @else {
        $output: $a $b $c $d;
    }

    @return $output;
}

/// Output directional properties, for instance `margin`.
///
/// @access private
///
/// @param {String} $pre
///   Prefix to use
/// @param {String} $suf
///   Suffix to use
/// @param {List} $vals
///   List of values
///
/// @require {function} collapse-directionals
/// @require {function} contains-falsy

@mixin directional-property($pre, $suf, $vals) {
    // Property Names
    $top: $pre + "-top" + if($suf, "-#{$suf}", "");
    $bottom: $pre + "-bottom" + if($suf, "-#{$suf}", "");
    $left: $pre + "-left" + if($suf, "-#{$suf}", "");
    $right: $pre + "-right" + if($suf, "-#{$suf}", "");
    $all: $pre + if($suf, "-#{$suf}", "");

    $vals: collapse-directionals($vals);

    @if contains-falsy($vals) {
        @if nth($vals, 1) {
            #{$top}: nth($vals, 1);
        }

        @if length($vals) == 1 {
            @if nth($vals, 1) {
                #{$right}: nth($vals, 1);
            }
        } @else {
            @if nth($vals, 2) {
                #{$right}: nth($vals, 2);
            }
        }

        @if length($vals) == 2 {
            @if nth($vals, 1) {
                #{$bottom}: nth($vals, 1);
            }
            @if nth($vals, 2) {
                #{$left}: nth($vals, 2);
            }
        } @else if length($vals) == 3 {
            @if nth($vals, 3) {
                #{$bottom}: nth($vals, 3);
            }
            @if nth($vals, 2) {
                #{$left}: nth($vals, 2);
            }
        } @else if length($vals) == 4 {
            @if nth($vals, 3) {
                #{$bottom}: nth($vals, 3);
            }
            @if nth($vals, 4) {
                #{$left}: nth($vals, 4);
            }
        }
    } @else {
        #{$all}: $vals;
    }
}

/// Provides a quick method for targeting `margin` on specific sides of a box. Use a `null` value to “skip” a side.
///
/// @param {Arglist} $vals
///   List of arguments
///
/// @example scss - Usage
///   .element {
///     @include margin(null 10px 3em 20vh);
///   }
///
/// @example css - CSS Output
///   .element {
///     margin-bottom: 3em;
///     margin-left: 20vh;
///     margin-right: 10px;
///   }
///
/// @require {mixin} directional-property
///
/// @output `margin`

@mixin margin($vals...) {
    @include directional-property(margin, false, $vals...);
}
